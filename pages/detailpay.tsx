import { DetailCard, LayoutFirst } from '@components/common'
import api from '@framework/api'
import { useQuery } from '@tanstack/react-query'
import { Card } from 'antd'
import Head from 'next/head'
import { useRouter } from 'next/router'
import React, { ReactElement, useEffect, useState } from 'react'
import { IDetailItem, IPropsItem } from './detallepas'
import moment from 'moment'

const DetailPay = () => {
  const router = useRouter()
  const id: string = String(router?.query?.id ?? '')
  const [dataItem, setDataItem] = useState<IPropsItem>()
  console.log({ dataItem })
  const {
    data: data,
    isLoading,
    isError,
    refetch
  } = useQuery<{ processes: IDetailItem[] }>({
    queryKey: ['processes'],
    queryFn: () => api.listpas.getProcessesByTracking(Number(id)),
    retry: false,
    refetchOnWindowFocus: false,
    enabled: !!id
  })
  useEffect(() => {
    const itemDetailPay = localStorage.getItem('itemDetailPay')
    const resItemDetailPay = itemDetailPay ? JSON.parse(itemDetailPay) : {}
    setDataItem(resItemDetailPay)
  }, [])

  const detailEmi = data?.processes?.filter((item) => item.tracking_action === 'EMISION')[0]
  const arrayNoti = data?.processes?.filter((item) => item.tracking_action === 'NOTIFICACION')
  const headerName = `${dataItem?.name} - R.G. ${dataItem?.resolution_number} - Exp. ${dataItem?.num_expediente}`

  const dataRemake =
    id && data && data?.processes?.length > 0
      ? data?.processes?.filter((item) => item.rj_type === 'REHACER' && item.rj_remake)[0]
      : ({} as IDetailItem)

  const rj_remakeDatail: IDetailItem = dataRemake

  return (
    <>
      <Head>
        <title>Detalle PAS | Monitoreo de PAS</title>
        <meta name="description" content="Generated by Monitoreo de PAS" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Card title="">
        <div style={{ marginBottom: '0.4rem' }}>
          <h1 style={{ fontSize: 25, color: '#4F5172' }}>{headerName}</h1>
        </div>

        <hr style={{ marginBottom: '0.9rem', borderTop: '2px solid #A8CFEB' }} />

        {rj_remakeDatail?.document && (
          <p className="text-xl">Los registros con (*) quedan sin efecto por Resolución Jefatural {rj_remakeDatail?.document}.</p>
        )}

        <div className="relative h-full p-10 overflow-hidden wrap">
          <div className="absolute h-full border border-2 border-gray-700 border-opacity-20" style={{ left: '50%' }}></div>
          {id &&
            data?.processes?.map((item, key) => {
              return (
                <DetailCard
                  key={key}
                  par={(key + 1) % 2 === 0}
                  item={{ ...item, headerName }}
                  idx={key}
                  estado=""
                  detailEmi={detailEmi}
                  arrayNoti={arrayNoti}
                  onHidden={() => {}}
                  //   onHidden={() => {
                  //     getDetailInfo(id!)
                  //   }}
                />
              )
            })}
        </div>
        <hr style={{ marginBottom: '0.9rem', borderTop: '2px solid #A8CFEB' }} />
        <div style={{ display: 'flex', gap: '50px' }}>
          <button
            className="text-white bg-[#2596be] rounded-[10px] cursor-pointer text-[1rem] py-2.5 px-[60px]"
            onClick={() => router.push('/listadopasgad')}>
            Regresar
          </button>
        </div>
      </Card>
    </>
  )
}

DetailPay.getLayout = function getLayout(page: ReactElement) {
  return <LayoutFirst>{page}</LayoutFirst>
}

export default DetailPay
